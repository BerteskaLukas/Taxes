// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sql;

#nullable disable

namespace Sql.Migrations
{
    [DbContext(typeof(TaxesDbContext))]
    partial class TaxesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Abstractions.Entities.Municipality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Municipalities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4219),
                            Name = "Copenhagen"
                        });
                });

            modelBuilder.Entity("Abstractions.Entities.Taxe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MunicipalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TaxeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("TaxeTypeId");

                    b.ToTable("Taxes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4235),
                            EndDate = new DateTime(2023, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MunicipalityId = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxeTypeId = new Guid("cca3f6e8-4687-489e-be62-d0ab1ad65033"),
                            Value = 0.40000000000000002
                        },
                        new
                        {
                            Id = new Guid("ac2cc175-4f71-456a-bf4d-3548d7af9f4b"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4242),
                            EndDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MunicipalityId = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxeTypeId = new Guid("6fa81744-71b4-41da-8f38-53102ef99943"),
                            Value = 0.20000000000000001
                        },
                        new
                        {
                            Id = new Guid("e1296797-f320-48a2-bd6a-f4b14ab93912"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4245),
                            MunicipalityId = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxeTypeId = new Guid("aeaa5f81-f6c9-4905-9309-99e6998f658c"),
                            Value = 0.10000000000000001
                        },
                        new
                        {
                            Id = new Guid("f686e7c2-61f3-4b94-afd7-01a92f3dad8b"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4247),
                            MunicipalityId = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            StartDate = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxeTypeId = new Guid("aeaa5f81-f6c9-4905-9309-99e6998f658c"),
                            Value = 0.10000000000000001
                        });
                });

            modelBuilder.Entity("Abstractions.Entities.TaxeOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MunicipalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaxeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TaxeTypeId");

                    b.ToTable("TaxeOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d2e7de1-f1c2-4cda-b81e-968a116a9334"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4260),
                            MunicipalityId = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            TaxeTypeId = new Guid("6fa81744-71b4-41da-8f38-53102ef99943")
                        },
                        new
                        {
                            Id = new Guid("063f535c-4fe0-4003-86be-18c03425969c"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4263),
                            MunicipalityId = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            ParentId = new Guid("5d2e7de1-f1c2-4cda-b81e-968a116a9334"),
                            TaxeTypeId = new Guid("cca3f6e8-4687-489e-be62-d0ab1ad65033")
                        },
                        new
                        {
                            Id = new Guid("4e5e0fa7-f3f2-4d8d-8d44-a5509e1ebd41"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4266),
                            MunicipalityId = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            ParentId = new Guid("063f535c-4fe0-4003-86be-18c03425969c"),
                            TaxeTypeId = new Guid("edcd5ed2-47f6-434b-92e6-02f47a0c2082")
                        },
                        new
                        {
                            Id = new Guid("91daae9b-479a-45c9-965c-79231b89c3da"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4333),
                            MunicipalityId = new Guid("a5c94773-4a0d-429d-9730-0489cf6b5f0d"),
                            ParentId = new Guid("4e5e0fa7-f3f2-4d8d-8d44-a5509e1ebd41"),
                            TaxeTypeId = new Guid("aeaa5f81-f6c9-4905-9309-99e6998f658c")
                        });
                });

            modelBuilder.Entity("Abstractions.Entities.TaxeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxeTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6fa81744-71b4-41da-8f38-53102ef99943"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4056),
                            Name = "Yearly"
                        },
                        new
                        {
                            Id = new Guid("cca3f6e8-4687-489e-be62-d0ab1ad65033"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4069),
                            Name = "Monthly"
                        },
                        new
                        {
                            Id = new Guid("edcd5ed2-47f6-434b-92e6-02f47a0c2082"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4071),
                            Name = "Weekly"
                        },
                        new
                        {
                            Id = new Guid("aeaa5f81-f6c9-4905-9309-99e6998f658c"),
                            CreatedAt = new DateTime(2023, 2, 12, 20, 4, 46, 759, DateTimeKind.Utc).AddTicks(4073),
                            Name = "Daily"
                        });
                });

            modelBuilder.Entity("Abstractions.Entities.Taxe", b =>
                {
                    b.HasOne("Abstractions.Entities.Municipality", "Municipality")
                        .WithMany("Taxes")
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Abstractions.Entities.TaxeType", "TaxeType")
                        .WithMany()
                        .HasForeignKey("TaxeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipality");

                    b.Navigation("TaxeType");
                });

            modelBuilder.Entity("Abstractions.Entities.TaxeOrder", b =>
                {
                    b.HasOne("Abstractions.Entities.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Abstractions.Entities.TaxeOrder", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("Abstractions.Entities.TaxeType", "TaxeType")
                        .WithMany()
                        .HasForeignKey("TaxeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipality");

                    b.Navigation("Parent");

                    b.Navigation("TaxeType");
                });

            modelBuilder.Entity("Abstractions.Entities.Municipality", b =>
                {
                    b.Navigation("Taxes");
                });
#pragma warning restore 612, 618
        }
    }
}
